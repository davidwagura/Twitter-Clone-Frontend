@tailwind base;
@tailwind components;
@tailwind utilities;



/* 
<button class="flex ">

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">

    <path fill-rule="evenodd" d="M2 4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4Zm10.5 5.707a.5.5 0 0 0-.146-.353l-1-1a.5.5 0 0 0-.708 0L9.354 9.646a.5.5 0 0 1-.708 0L6.354 7.354a.5.5 0 0 0-.708 0l-2 2a.5.5 0 0 0-.146.353V12a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5V9.707ZM12 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z" clip-rule="evenodd" />

</svg>

</button>

<button class="flex items-center">

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">

    <path fill-rule="evenodd" d="M3 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H3Zm.895 3.458C4.142 6.071 4.38 6 4.5 6s.358.07.605.458a.75.75 0 1 0 1.265-.805C5.933 4.966 5.274 4.5 4.5 4.5s-1.433.466-1.87 1.153C2.195 6.336 2 7.187 2 8s.195 1.664.63 2.347c.437.687 1.096 1.153 1.87 1.153s1.433-.466 1.87-1.153a.75.75 0 0 0 .117-.402V8a.75.75 0 0 0-.75-.75H5a.75.75 0 0 0-.013 1.5v.955C4.785 9.95 4.602 10 4.5 10c-.121 0-.358-.07-.605-.458C3.647 9.15 3.5 8.595 3.5 8c0-.595.147-1.15.395-1.542ZM9 5.25a.75.75 0 0 0-1.5 0v5.5a.75.75 0 0 0 1.5 0v-5.5Zm1 0a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5H11.5v1.25h.75a.75.75 0 0 1 0 1.5h-.75v2a.75.75 0 0 1-1.5 0v-5.5Z" clip-rule="evenodd" />

</svg>

</button>

<button class="">

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">

    <path d="M6.5 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0V4.5h6.75a.75.75 0 0 0 0-1.5H6.5v-.75ZM11 6.5a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0v-.75h2.25a.75.75 0 0 0 0-1.5H11V6.5ZM5.75 10a.75.75 0 0 1 .75.75v.75h6.75a.75.75 0 0 1 0 1.5H6.5v.75a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 .75-.75ZM2.75 7.25H8.5v1.5H2.75a.75.75 0 0 1 0-1.5ZM4 3H2.75a.75.75 0 0 0 0 1.5H4V3ZM2.75 11.5H4V13H2.75a.75.75 0 0 1 0-1.5Z" />

</svg>

</button>

<button class="flex items-center">

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">

    <path fill-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0ZM6 8c.552 0 1-.672 1-1.5S6.552 5 6 5s-1 .672-1 1.5S5.448 8 6 8Zm5-1.5c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5Zm.005 4.245a.75.75 0 0 0-1.06 0 2.75 2.75 0 0 1-3.89 0 .75.75 0 0 0-1.06 1.06 4.25 4.25 0 0 0 6.01 0 .75.75 0 0 0 0-1.06Z" clip-rule="evenodd" />

</svg>

</button> */



/* <template> */
/* 
  <div class="p-4">

    <h2 class="text-2xl font-bold mb-4">For You</h2>

    <div class="tweet-container">

      <ul v-if="users.length" class="space-y-6">

        <li v-for="user in users" :key="user.id" class="p-4 border-b border-gray-200 bg-white">

          <div class="flex items-center justify-between mb-2">

            <div class="flex items-center space-x-4">

              <img :src="user.avatar" alt="Avatar" class="w-12 h-12 rounded-full" />

              <div>

                <div class="font-bold text-lg">{{ user.first_name }} {{ user.last_name }}</div>

                <div class="text-gray-500">@{{ user.username }}</div>

              </div>

            </div>

            <button @click="followUser(user.id)" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-full">

              Follow

            </button>

          </div>

          <ul class="space-y-4">

            <li v-for="tweet in user.tweet" :key="tweet.id" class="p-4 border rounded-lg bg-gray-50">

              <div>{{ tweet.body }}</div>

              <div class="text-gray-500 text-sm mt-2">{{ formatDate(tweet.created_at) }}</div>

            </li>

          </ul>

        </li>

      </ul>

      <div v-else class="text-gray-500">No tweets to display</div>

    </div>

  </div>

</template>


<script>

import axiosInstance from '@/axiosInstance';

export default {

  data() {

    return {

      users: [], 

    };

  },

  created() {

    this.fetchTweets();

  },

  methods: {

    async fetchTweets() {

      try {

        const response = await axiosInstance.get('/for-you');

        console.log('API Response:', response);

        this.users = response.data.user;

      } catch (err) {

        console.error('Error fetching tweets:', err);

      }

    },

    followUser(userId) {
      
      // Implement follow user functionality
      console.log(`Follow user with ID: ${userId}`);

    },

    formatDate(dateString) {

      const options = { year: 'numeric', month: 'long', day: 'numeric' };

      return new Date(dateString).toLocaleDateString(undefined, options);

    }

  },

};

</script> */


/* <style scoped> */

/* .tweet-container {
  
  max-height: 500px; 
  overflow-y: auto;
  padding: 10px; 
  -ms-overflow-style: none;  
  scrollbar-width: none; 
}

.tweet-container::-webkit-scrollbar {

  display: none; 
}

</style> */
